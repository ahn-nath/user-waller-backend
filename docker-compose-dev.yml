version: '3.8'
services:
  postgres:
    container_name: postgres-xp-users
    image: postgres:16.1-alpine3.18
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-xp-users:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - api-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend-xp-users
    build:
      context: .
      dockerfile: Dockerfile_Dev
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - .:/app
      - ./logs:/app/logs/
    networks:
      - api-network
    depends_on:
      postgres:
        condition: service_healthy

  pgadmin:
    container_name: pgadmin-xp-users
    image: dpage/pgadmin4:latest
    restart: always
    # ports:
    #   - "${PGADMIN_PORT}:80"
    ports:
      - "18001:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data-xp-users:/var/lib/pgadmin
    networks:
      - api-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-data-xp-users:
  pgadmin-data-xp-users:


networks:
  api-network:
    name: xp-users-api-network
    driver: bridge
